continue
@x
continue
x
continue
filtered_hash
continue
z
z = x.each {|k, v| k}
x.each {|k, v| k}
x
x["currency"]
x.first
x.currency
x
x = hash["Envelope"]["Cube"]["Cube"]["Cube"]
hash["Envelope"]["Cube"]["Cube"]["Cube"]
hash["Envelope"]["Cube"]["Cube"]
hash.dig("Envelope","currency")
x
x = hash.dig("Envelope","currency")
x = hash.dig("currency")
x = hash.dig(:currency)
x = hash.dig(currency)
hash["Envelope"]["Cube"]
hash["Envelope"]["Cube"]["Cube"]["currency"]
hash["Envelope"]["Cube"]["currency"]
hash["Envelope"]["Cube"]
hash[0]
hash["Envelope"]["Cube"].second
hash["Envelope"]["Cube"]
hash["Envelope"]["Cube"]["Cube"]
hash["Cube"]
hash["Envelope"]["Cube"]
hash["Envelope"]
hash[:Envelope]
hash[:C
hash[:Envelope][:Cube]
continue
hash.dig("Cube")
continue
@x
continue
hash
@x
continue
hash.values.name
hash.values.Cube
hash.values.cube
hash.values
hash.values.first
hash.values
hash
hash.values.last
hash.values.first
hash.values.keys
hash.values
hash.keys
hash.map do {|k, v| p k}
hash.Cube
puts hash
hash
hash.cube
hash
continue
puts parsed_info.xpath("//rate")
puts parsed_info.xpath("//")
puts parsed_info.xpath("/*/rate")
puts parsed_info.xpath("/*/name")
puts parsed_info.xpath("/*/currency")
puts parsed_info.xpath("/*/@document_type")
puts parsed_info.xpath("//currency")
continue
puts parsed_info.css
puts parsed_info.xpath
puts parsed_info.xpath("//name")
puts parsed_info.xpath("name")
puts parsed_info.xpath("//name")
parsed_info
parsed_info.xpath("/*/@document_type")
continue
puts parsed_info.xpath("//value")
parsed_info.xpath("rate")
parsed_info.xpath("currency")
parsed_info.xpath("//currency")
parsed_info.xpath("//value")
puts parsed_info.xpath("//value")
puts parsed_info
parsed_info
continue
parsed_info
continue
doc.x
doc
continue
doc.currency
continue
doc.rate
doc.currency
doc.values
doc.vlues
doc.keys
doc.key
doc.name
doc
doc.css
continue
doc.css
doc
exit
rxit
@file.each do |i|
@file.to_currency
@file.currency
@file.rate
@file.cube
@file.to_currency
@file.currency
@file
continue
@eu_bank.update_rates("/tmp/exchange_rates.xml")
@eu_bank.update_rates(cache)
file.updated_at
file
continue
file
continue
file
file.rate
file.rates
flie.rates
file
continue
@rates
continue
@rates
continue
rates
rate
